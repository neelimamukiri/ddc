cluster:
  name: kubernetes
  admin_password: GoNniJeYyatopvik9      # This password is used to login to the Kubernetes Dashboard and can also be used for administration without a security certificate
  allow_package_installation: true       # When false, installation will not occur if any node is missing the correct deb/rpm packages. When true, the installer will attempt to install missing packages for you.
  disconnected_installation: false       # Set to true if you have local package and Docker repositories seeded with Kismatic binaries.
  networking:
    type: overlay                        # overlay or routed. Routed pods can be addressed from outside the Kubernetes cluster; Overlay pods can only address each other.
    pod_cidr_block: 172.16.0.0/16        # Kubernetes will assign pods IPs in this range. Do not use a range that is already in use on your local network!
    service_cidr_block: 172.17.0.0/16    # Kubernetes will assign services IPs in this range. Do not use a range that is already in use by your local network or pod network!
    policy_enabled: false                # When true, enables network policy enforcement on the Kubernetes Pod network. This is an advanced feature.
    update_hosts_files: false            # When true, the installer will add entries for all nodes to other nodes' hosts files. Use when you don't have access to DNS.
  certificates:
    expiry: 17520h                       # Self-signed certificate expiration period in hours; default is 2 years.
  ssh:
    user: vagrant
    ssh_key: /Users/neelimam/.vagrant.d/insecure_private_key
    ssh_port: 22
docker_registry:                         # Here you will provide the details of your Docker registry or setup an internal one to run in the cluster. This is optional and the cluster will always have access to the Docker Hub.
  setup_internal: false                  # When true, a Docker Registry will be installed on top of your cluster and used to host Docker images needed for its installation.
  address: ""                            # IP or hostname for your Docker registry. An internal registry will NOT be setup when this field is provided. Must be accessible from all the nodes in the cluster.
  port: 8443                             # Port for your Docker registry.
  CA: ""                                 # Absolute path to the CA that was used when starting your Docker registry. The docker daemons on all nodes in the cluster will be configured with this CA.
etcd:                                    # Here you will identify all of the nodes that should play the etcd role on your cluster.
  expected_count: 1
  nodes:
  - host: "192.168.2.50"                             # The (short) hostname of a node, e.g. etcd01
    ip: "192.168.2.50"                               # The ip address the installer should use to manage this node, e.g. 8.8.8.8.
    internalip: "192.168.2.50"                       # If the node has an IP for internal traffic, enter it here; otherwise leave blank.
master:                                  # Here you will identify all of the nodes that should play the master role.
  expected_count: 1
  load_balanced_fqdn: "192.168.2.50"                 # If you have set up load balancing for master nodes, enter the FQDN name here. Otherwise, use the IP address of a single master node.
  load_balanced_short_name: "192.168.2.50"           # If you have set up load balancing for master nodes, enter the short name here. Otherwise, use the IP address of a single master node.
  nodes:
  - host: "192.168.2.50"
    ip: "192.168.2.50"
    internalip: "192.168.2.50"
worker:                                  # Here you will identify all of the nodes that will be workers.
  expected_count: 1
  nodes:
  - host: "192.168.2.51"
    ip: "192.168.2.51"
    internalip: "192.168.2.51"
ingress:
  expected_count: 2
  nodes:
  - host: "192.168.2.50"
    ip: "192.168.2.50"
    internalip: "192.168.2.50"
  - host: "192.168.2.51"
    ip: "192.168.2.51"
    internalip: "192.168.2.51"
storage:
  expected_count: 0
  nodes: []
nfs:                                     # A set of NFS volumes for use by on-cluster persistent workloads, managed by Kismatic.
  nfs_volume: []
